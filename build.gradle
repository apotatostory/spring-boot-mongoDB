buildscript {
	ext {
		springBootVersion = '2.1.1.BUILD-SNAPSHOT'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		// gradle
		classpath "se.transmode.gradle:gradle-docker:1.2"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// gradle
apply plugin: 'docker'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

jar {
    baseName = 'spring-boot-mongoDB'
    version =  '0.1.0'
}

task buildDocker(type: Docker) {
  baseImage = 'myrepo/java:latest'
  push = project.hasProperty('push')
  tag = 'myrepo/testmessages'
  addFile {
    from jar
    rename {'app.jar'}
  }
  entryPoint(['java', '-Djava.security.egd=file:/dev/./urandom', '-jar', '/app.jar'])
 
}

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

ext {
	springCloudVersion = 'Greenwich.BUILD-SNAPSHOT'
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-mongodb-reactive')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	//Utils
	compile('org.apache.commons:commons-lang3:3.6')
	compile('org.jsoup:jsoup:1.7.2')
	compile('net.sourceforge.htmlunit:htmlunit:2.4')
	// use spring-boot-common jar
	implementation project (path:':spring-boot-common')

	
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
